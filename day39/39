// //Missing in Array
Difficulty: EasyAccuracy: 29.59%Submissions: 1.1MPoints: 2
Given an array of size n-1 such that it only contains distinct integers in the range of 1 to n. Return the missing element.

Examples:

Input: n = 5, arr[] = {1,2,3,5}
Output: 4
Explanation : All the numbers from 1 to 5 are present except 4.
Input: n = 2, arr[] = {1}
Output: 2
Explanation : All the numbers from 1 to 2 are present except 2.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

class Solution {
    // Note that the size of the array is n-1
    int missingNumber(int n, int arr[]) {
        HashSet<Integer> set = new HashSet<>();
        for(int i  = 0; i<n-1; i++){
            set.add(arr[i]);
        }
        for(int i = 1; i<=n; i++){
            if(!set.contains(i)){
                return i;
            }
        }
        return -1;
    }
}
// better way 
    sum all the elements and using loop then sum 1 to n and return all array elements sum minus the sum from 1 to n.

// // Array Duplicates
Difficulty: EasyAccuracy: 18.95%Submissions: 716K+Points: 2
Given an array arr of size n which contains elements in range from 0 to n-1, you need to find all the elements occurring more than once in the given array. Return the answer in ascending order. If no such element is found, return list containing [-1]. 

Note: Try and perform all operations within the provided array. The extra (non-constant) ) space needs to be used only for the array to be returned.

Examples:

Input: arr[] = {0,3,1,2}, n = 4
Output: -1
Explanation: There is no repeating element in the array. Therefore output is -1.
Input: arr[] = {2,3,1,2,3}, n = 5
Output: 2 3 
Explanation: 2 and 3 occur more than once in the given array.
Expected Time Complexity: O(n).
Expected Auxiliary Space: O(n).

Constraints:
0 <= arr[i] <= n-1, for each valid i
1 <= n <= 105

class Solution {
    public static ArrayList<Integer> duplicates(int[] arr) {
        ArrayList<Integer> list = new ArrayList<>();        
        HashSet<Integer> set = new HashSet<>();
        for(int i : arr){
            if(set.contains(i)){
                list.add(i);
            } else {
                set.add(i);
            }
        }
        if(list.size() == 0){
            list.add(-1);
        }
        return list;
    }
}


