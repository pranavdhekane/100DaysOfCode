Day 62 : 

reverse a linked list
public static Node reverse(Node head){
        Node prev = head;
        Node curr = head.next;

        while(curr!=null){
            Node next = curr.next;
            curr.next = prev;

            prev = curr;
            curr = next;
        }
        head.next = null;
        head = prev;

        return head;
    }


Merge Two Sorted Linked lists
    class Solution {
        public ListNode mergeTwoLists(ListNode h1, ListNode h2) {
            ListNode head = new ListNode(0);
            ListNode curr = head;
            while(h1 != null && h2 != null){
                if(h1.val < h2.val){
                    curr.next = h1;
                    h1 = h1.next; 
                } else {
                    curr.next = h2;
                    h2 = h2.next;
                }
                curr = curr.next;
            }
            
            if(h1 != null){
                curr.next = h1;
            }
    
            if(h2 != null){
                curr.next = h2;
            }
    
            return head.next;
        }
    }