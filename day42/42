Day 42: 

4. Find itinerary from tickets //Find a way from start to end
public class day42 {
    public static String getStart(HashMap<String, String> tick){
        //reverse map
        HashMap<String, String> revMap = new HashMap<>();

        //Storing tick map elements in revrese order
        for(String key: tick.keySet()){
            revMap.put(tick.get(key), key);
        }

        //checking which key of tick is not present as a value in revMap map.
        for(String key: tick.keySet()){
            if(revMap.containsKey(key) == false){
                return key;
            }
        }
        return null;
    }
    public static void main(String[] args) {
        HashMap<String, String> tickets = new HashMap<>();
        tickets.put("Chennai", "Bengaluru");
        tickets.put("Mumbai", "Delhi");
        tickets.put("Goa", "Chennai");
        tickets.put("Delhi", "Goa");

        String start = getStart(tickets);

        while(tickets.containsKey(start)){
            System.out.print(start+"->");
            start = tickets.get(start);
        }
        System.out.println(start);
    }
}

5. Subarray sum equal to K
public static void main(String[] args) {
    int arr[] = {10, 2, -2, -20, 10};
    int k = -10;
    HashMap<Integer, Integer> map = new HashMap<>();//<Sum, freq>

    map.put(0, 1); //empty subArray
    int ans = 0;
    int sum = 0;

    for(int i = 0; i<arr.length; i++){
        sum+=arr[i];

        if(map.containsKey(sum - k)){
            ans += map.get(sum - k);
        }

        if(map.containsKey(sum)){
            map.put(sum, map.get(sum) + 1);
        } else {
            map.put(sum, 1);
        }
    }
    System.out.println(ans);
}